/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleVoting,
  SimpleVotingInterface,
} from "../../../contracts/Voting.sol/SimpleVoting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_candidateNames",
        type: "string[]",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "electionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elections",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "endElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidate",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVoterChoice",
    outputs: [
      {
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c2f806100a56000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610151578063997d28301461016c5780639c98bcbb14610175578063b384abef14610188578063f2fde38b1461019b57600080fd5b80630eac27f4146100a3578063349813b2146100f05780634bd46448146101055780635e6fef0114610126578063715018a614610149575b600080fd5b6100dd6100b13660046107a5565b60008281526001602090815260408083206001600160a01b038516845260060190915290205492915050565b6040519081526020015b60405180910390f35b6101036100fe366004610888565b6101ae565b005b61011861011336600461096f565b610327565b6040516100e79291906109d7565b6101396101343660046109f9565b6103e9565b6040516100e79493929190610a12565b61010361049d565b6000546040516001600160a01b0390911681526020016100e7565b6100dd60025481565b6101036101833660046109f9565b6104b1565b61010361019636600461096f565b61054f565b6101036101a9366004610a3e565b6106ce565b6101b661070c565b60028151101561020d5760405162461bcd60e51b815260206004820152601a60248201527f4e656564206174206c6561737420322063616e6469646174657300000000000060448201526064015b60405180910390fd5b600280546000918261021e83610a60565b90915550600081815260016020819052604090912082815591925081016102458582610b10565b5060028101805460ff1916600117905560005b83518110156102df57604051806060016040528082815260200185838151811061028457610284610bd0565b602090810291909101810151825260009181018290528382526003850181526040909120825181559082015160018201906102bf9082610b10565b5060409190910151600290910155806102d781610a60565b915050610258565b508251600482015560405182907f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed14190610319908790610be6565b60405180910390a250505050565b60008281526001602081815260408084208585526003019091528220600281015491810180546060949390829061035d90610a87565b80601f016020809104026020016040519081016040528092919081815260200182805461038990610a87565b80156103d65780601f106103ab576101008083540402835291602001916103d6565b820191906000526020600020905b8154815290600101906020018083116103b957829003601f168201915b5050505050915092509250509250929050565b60016020819052600091825260409091208054918101805461040a90610a87565b80601f016020809104026020016040519081016040528092919081815260200182805461043690610a87565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b505050506002830154600490930154919260ff1691905084565b6104a561070c565b6104af6000610739565b565b6104b961070c565b6000818152600160205260409020600281015460ff166105145760405162461bcd60e51b8152602060048201526016602482015275115b1958dd1a5bdb88185b1c9958591e48195b99195960521b6044820152606401610204565b60028101805460ff1916905560405182907f562cd572b2ba3b666cd989fc4ca98419ec81e75f04528df9d9d76fdb7807ee7190600090a25050565b6000828152600160205260409020600281015460ff166105aa5760405162461bcd60e51b8152602060048201526016602482015275456c656374696f6e206973206e6f742061637469766560501b6044820152606401610204565b33600090815260058201602052604090205460ff16156105fc5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610204565b806004015482106106435760405162461bcd60e51b8152602060048201526011602482015270496e76616c69642063616e64696461746560781b6044820152606401610204565b3360009081526005820160209081526040808320805460ff1916600117905560068401825280832085905584835260038401909152812060020180549161068983610a60565b9091555050604080513381526020810184905284917f2acce567deca3aabf56327adbb4524bd5318936eaefa69e3a5208ffda0cfec09910160405180910390a2505050565b6106d661070c565b6001600160a01b03811661070057604051631e4fbdf760e01b815260006004820152602401610204565b61070981610739565b50565b6000546001600160a01b031633146104af5760405163118cdaa760e01b8152336004820152602401610204565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107a057600080fd5b919050565b600080604083850312156107b857600080fd5b823591506107c860208401610789565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610810576108106107d1565b604052919050565b600082601f83011261082957600080fd5b813567ffffffffffffffff811115610843576108436107d1565b610856601f8201601f19166020016107e7565b81815284602083860101111561086b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561089b57600080fd5b823567ffffffffffffffff808211156108b357600080fd5b6108bf86838701610818565b93506020915081850135818111156108d657600080fd5b8501601f810187136108e757600080fd5b8035828111156108f9576108f96107d1565b8060051b6109088582016107e7565b918252828101850191858101908a84111561092257600080fd5b86850192505b8383101561095e578235868111156109405760008081fd5b61094e8c8983890101610818565b8352509186019190860190610928565b809750505050505050509250929050565b6000806040838503121561098257600080fd5b50508035926020909101359150565b6000815180845260005b818110156109b75760208185018101518683018201520161099b565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006109ea6040830185610991565b90508260208301529392505050565b600060208284031215610a0b57600080fd5b5035919050565b848152608060208201526000610a2b6080830186610991565b9315156040830152506060015292915050565b600060208284031215610a5057600080fd5b610a5982610789565b9392505050565b600060018201610a8057634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610a9b57607f821691505b602082108103610abb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b0b57600081815260208120601f850160051c81016020861015610ae85750805b601f850160051c820191505b81811015610b0757828155600101610af4565b5050505b505050565b815167ffffffffffffffff811115610b2a57610b2a6107d1565b610b3e81610b388454610a87565b84610ac1565b602080601f831160018114610b735760008415610b5b5750858301515b600019600386901b1c1916600185901b178555610b07565b600085815260208120601f198616915b82811015610ba257888601518255948401946001909101908401610b83565b5085821015610bc05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b602081526000610a59602083018461099156fea26469706673582212208b39b2f42e05e0c7824346597bc84a37e48603688ebc42058261a5d269c17b3d64736f6c63430008140033";

type SimpleVotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleVotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleVoting__factory extends ContractFactory {
  constructor(...args: SimpleVotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleVoting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleVoting__factory {
    return super.connect(runner) as SimpleVoting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleVotingInterface {
    return new Interface(_abi) as SimpleVotingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleVoting {
    return new Contract(address, _abi, runner) as unknown as SimpleVoting;
  }
}
