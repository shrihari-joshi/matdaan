/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_voteCommitment",
        type: "bytes32",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_candidateNames",
        type: "string[]",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "electionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elections",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "endElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidate",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "getElectionDetails",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c44806100a56000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610121578063997d28301461013c5780639c98bcbb14610153578063f2fde38b14610166578063f60499241461017957600080fd5b8063349813b2146100a35780634bd46448146100b85780635e599e58146100e35780635e6fef01146100f6578063715018a614610119575b600080fd5b6100b66100b1366004610837565b61019b565b005b6100cb6100c636600461091e565b610322565b6040516100da93929190610986565b60405180910390f35b6100b66100f13660046109af565b6103ee565b6101096101043660046109db565b61049c565b6040516100da94939291906109f4565b6100b6610550565b6000546040516001600160a01b0390911681526020016100da565b61014560025481565b6040519081526020016100da565b6100b66101613660046109db565b610564565b6100b6610174366004610a20565b610602565b61018c6101873660046109db565b610640565b6040516100da93929190610a50565b6101a3610703565b60058151101580156101b75750600a815111155b6102085760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616e64696461746520636f756e7400000000000000000060448201526064015b60405180910390fd5b600280546000918261021983610a75565b90915550600081815260016020819052604090912082815591925081016102408582610b25565b5060028101805460ff1916600117905560005b83518110156102da57604051806060016040528082815260200185838151811061027f5761027f610be5565b602090810291909101810151825260009181018290528382526003850181526040909120825181559082015160018201906102ba9082610b25565b5060409190910151600290910155806102d281610a75565b915050610253565b508251600482015560405182907f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed14190610314908790610bfb565b60405180910390a250505050565b6000828152600160208181526040808420858552600381019092528320805460028201549382018054606095879594939291829061035f90610a9c565b80601f016020809104026020016040519081016040528092919081815260200182805461038b90610a9c565b80156103d85780601f106103ad576101008083540402835291602001916103d8565b820191906000526020600020905b8154815290600101906020018083116103bb57829003601f168201915b5050505050915094509450945050509250925092565b6000838152600160209081526040808320858452600581019092529091205460ff161561044d5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b60448201526064016101ff565b600083815260058201602052604090819020805460ff191660011790555184907f360a953ca6204e950fa88a5b660c09f12df914124ec5270703b41dcc58b56748906103149086815260200190565b6001602081905260009182526040909120805491810180546104bd90610a9c565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990610a9c565b80156105365780601f1061050b57610100808354040283529160200191610536565b820191906000526020600020905b81548152906001019060200180831161051957829003601f168201915b505050506002830154600490930154919260ff1691905084565b610558610703565b6105626000610730565b565b61056c610703565b6000818152600160205260409020600281015460ff166105c75760405162461bcd60e51b8152602060048201526016602482015275115b1958dd1a5bdb88185b1c9958591e48195b99195960521b60448201526064016101ff565b60028101805460ff1916905560405182907f562cd572b2ba3b666cd989fc4ca98419ec81e75f04528df9d9d76fdb7807ee7190600090a25050565b61060a610703565b6001600160a01b03811661063457604051631e4fbdf760e01b8152600060048201526024016101ff565b61063d81610730565b50565b600081815260016020819052604082206002810154600482015492820180546060959485949360ff1691839061067590610a9c565b80601f01602080910402602001604051908101604052809291908181526020018280546106a190610a9c565b80156106ee5780601f106106c3576101008083540402835291602001916106ee565b820191906000526020600020905b8154815290600101906020018083116106d157829003601f168201915b50505050509250935093509350509193909250565b6000546001600160a01b031633146105625760405163118cdaa760e01b81523360048201526024016101ff565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107bf576107bf610780565b604052919050565b600082601f8301126107d857600080fd5b813567ffffffffffffffff8111156107f2576107f2610780565b610805601f8201601f1916602001610796565b81815284602083860101111561081a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561084a57600080fd5b823567ffffffffffffffff8082111561086257600080fd5b61086e868387016107c7565b935060209150818501358181111561088557600080fd5b8501601f8101871361089657600080fd5b8035828111156108a8576108a8610780565b8060051b6108b7858201610796565b918252828101850191858101908a8411156108d157600080fd5b86850192505b8383101561090d578235868111156108ef5760008081fd5b6108fd8c89838901016107c7565b83525091860191908601906108d7565b809750505050505050509250929050565b6000806040838503121561093157600080fd5b50508035926020909101359150565b6000815180845260005b818110156109665760208185018101518683018201520161094a565b506000602082860101526020601f19601f83011685010191505092915050565b83815260606020820152600061099f6060830185610940565b9050826040830152949350505050565b6000806000606084860312156109c457600080fd5b505081359360208301359350604090920135919050565b6000602082840312156109ed57600080fd5b5035919050565b848152608060208201526000610a0d6080830186610940565b9315156040830152506060015292915050565b600060208284031215610a3257600080fd5b81356001600160a01b0381168114610a4957600080fd5b9392505050565b606081526000610a636060830186610940565b93151560208301525060400152919050565b600060018201610a9557634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610ab057607f821691505b602082108103610ad057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b2057600081815260208120601f850160051c81016020861015610afd5750805b601f850160051c820191505b81811015610b1c57828155600101610b09565b5050505b505050565b815167ffffffffffffffff811115610b3f57610b3f610780565b610b5381610b4d8454610a9c565b84610ad6565b602080601f831160018114610b885760008415610b705750858301515b600019600386901b1c1916600185901b178555610b1c565b600085815260208120601f198616915b82811015610bb757888601518255948401946001909101908401610b98565b5085821015610bd55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b602081526000610a49602083018461094056fea2646970667358221220b8184d629516744431209e6eadd008fbcdcce2553c463bd724a750c9a79b6aa364736f6c63430008140033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
