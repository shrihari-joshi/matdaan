/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    name: "CandidateVoteCount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
    ],
    name: "ElectionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifierHash",
        type: "bytes32",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "candidateToVote",
        type: "uint256",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_candidateNames",
        type: "string[]",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "electionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elections",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "endElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidate",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "getElectionDetails",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "getWinner",
    outputs: [
      {
        internalType: "uint256",
        name: "winnerId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "winnerName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "highestVoteCount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e9f806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101375780638da5cb5b1461013f578063997d28301461015a5780639c98bcbb14610171578063f2fde38b14610184578063f60499241461019757600080fd5b8063349813b2146100ae5780633e18fb4b146100c35780634129b2c9146100d65780634bd46448146101015780635e6fef0114610114575b600080fd5b6100c16100bc3660046109f7565b6101b9565b005b6100c16100d1366004610ade565b610340565b6100e96100e4366004610b0a565b610430565b6040516100f893929190610b69565b60405180910390f35b6100e961010f366004610b92565b610590565b610127610122366004610b0a565b61065c565b6040516100f89493929190610bb4565b6100c1610710565b6000546040516001600160a01b0390911681526020016100f8565b61016360025481565b6040519081526020016100f8565b6100c161017f366004610b0a565b610724565b6100c1610192366004610be0565b6107c2565b6101aa6101a5366004610b0a565b610800565b6040516100f893929190610c10565b6101c16108c3565b60058151101580156101d55750600a815111155b6102265760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616e64696461746520636f756e7400000000000000000060448201526064015b60405180910390fd5b600280546000918261023783610c35565b909155506000818152600160208190526040909120828155919250810161025e8582610ce5565b5060028101805460ff1916600117905560005b83518110156102f857604051806060016040528082815260200185838151811061029d5761029d610da5565b602090810291909101810151825260009181018290528382526003850181526040909120825181559082015160018201906102d89082610ce5565b5060409190910151600290910155806102f081610c35565b915050610271565b508251600582015560405182907f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed14190610332908790610dbb565b60405180910390a250505050565b6000838152600160209081526040808320858452600681019092529091205460ff161561039f5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161021d565b60008381526006820160209081526040808320805460ff191660011790558483526004840190915281208054916103d583610c35565b9091555050600082815260038201602052604081206002018054916103f983610c35565b9190505550837f360a953ca6204e950fa88a5b660c09f12df914124ec5270703b41dcc58b567488460405161033291815260200190565b600081815260016020526040812060609082908180805b83600501548110156104d35760008181526003850160205260409081902080546002820154925191927fd4d83d436da32b66ff1c598f81a0e57b068b3eff82066e5300e8dc78c6e7adc1926104a192916001860191610dce565b60405180910390a183816002015411156104c057806002015493508192505b50806104cb81610c35565b915050610447565b50600081815260038401602052604090208054600282015460018301805490919082906104ff90610c5c565b80601f016020809104026020016040519081016040528092919081815260200182805461052b90610c5c565b80156105785780601f1061054d57610100808354040283529160200191610578565b820191906000526020600020905b81548152906001019060200180831161055b57829003601f168201915b50505050509150965096509650505050509193909250565b600082815260016020818152604080842085855260038101909252832080546002820154938201805460609587959493929182906105cd90610c5c565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990610c5c565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b5050505050915094509450945050509250925092565b60016020819052600091825260409091208054918101805461067d90610c5c565b80601f01602080910402602001604051908101604052809291908181526020018280546106a990610c5c565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b505050506002830154600590930154919260ff1691905084565b6107186108c3565b61072260006108f0565b565b61072c6108c3565b6000818152600160205260409020600281015460ff166107875760405162461bcd60e51b8152602060048201526016602482015275115b1958dd1a5bdb88185b1c9958591e48195b99195960521b604482015260640161021d565b60028101805460ff1916905560405182907f562cd572b2ba3b666cd989fc4ca98419ec81e75f04528df9d9d76fdb7807ee7190600090a25050565b6107ca6108c3565b6001600160a01b0381166107f457604051631e4fbdf760e01b81526000600482015260240161021d565b6107fd816108f0565b50565b600081815260016020819052604082206002810154600582015492820180546060959485949360ff1691839061083590610c5c565b80601f016020809104026020016040519081016040528092919081815260200182805461086190610c5c565b80156108ae5780601f10610883576101008083540402835291602001916108ae565b820191906000526020600020905b81548152906001019060200180831161089157829003601f168201915b50505050509250935093509350509193909250565b6000546001600160a01b031633146107225760405163118cdaa760e01b815233600482015260240161021d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561097f5761097f610940565b604052919050565b600082601f83011261099857600080fd5b813567ffffffffffffffff8111156109b2576109b2610940565b6109c5601f8201601f1916602001610956565b8181528460208386010111156109da57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610a0a57600080fd5b823567ffffffffffffffff80821115610a2257600080fd5b610a2e86838701610987565b9350602091508185013581811115610a4557600080fd5b8501601f81018713610a5657600080fd5b803582811115610a6857610a68610940565b8060051b610a77858201610956565b918252828101850191858101908a841115610a9157600080fd5b86850192505b83831015610acd57823586811115610aaf5760008081fd5b610abd8c8983890101610987565b8352509186019190860190610a97565b809750505050505050509250929050565b600080600060608486031215610af357600080fd5b505081359360208301359350604090920135919050565b600060208284031215610b1c57600080fd5b5035919050565b6000815180845260005b81811015610b4957602081850181015186830182015201610b2d565b506000602082860101526020601f19601f83011685010191505092915050565b838152606060208201526000610b826060830185610b23565b9050826040830152949350505050565b60008060408385031215610ba557600080fd5b50508035926020909101359150565b848152608060208201526000610bcd6080830186610b23565b9315156040830152506060015292915050565b600060208284031215610bf257600080fd5b81356001600160a01b0381168114610c0957600080fd5b9392505050565b606081526000610c236060830186610b23565b93151560208301525060400152919050565b600060018201610c5557634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610c7057607f821691505b602082108103610c9057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610ce057600081815260208120601f850160051c81016020861015610cbd5750805b601f850160051c820191505b81811015610cdc57828155600101610cc9565b5050505b505050565b815167ffffffffffffffff811115610cff57610cff610940565b610d1381610d0d8454610c5c565b84610c96565b602080601f831160018114610d485760008415610d305750858301515b600019600386901b1c1916600185901b178555610cdc565b600085815260208120601f198616915b82811015610d7757888601518255948401946001909101908401610d58565b5085821015610d955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b602081526000610c096020830184610b23565b8381526000602060608184015260008554610de881610c5c565b8060608701526080600180841660008114610e0a5760018114610e2457610e52565b60ff1985168984015283151560051b890183019550610e52565b8a6000528660002060005b85811015610e4a5781548b8201860152908301908801610e2f565b8a0184019650505b50505050506040939093019390935250939250505056fea2646970667358221220fae9280808194faaceb9fb5af5272a6112256f2aeb4199af45dec4e8c86b6b5a64736f6c63430008140033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
